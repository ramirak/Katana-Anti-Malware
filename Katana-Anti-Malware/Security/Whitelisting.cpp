#include "Whitelisting.h"
#include "../Data/HandleData.h"

using namespace std;
using namespace std::filesystem;

map<string, vector<string>> WL;

#define WHITELIST_FILE "sys.dat"

BOOL isExec(string filename)
{
	return !strcmp(PathFindExtensionA(filename.c_str()), ".exe");
}

void InitWhitelist() 
{
	string sysdrive = getenv("SystemDrive");
	sysdrive.append("/");
	try
	{
		//sysdrive.c_str()
		for (recursive_directory_iterator i("C://Windows/System32/", directory_options::skip_permission_denied), end; i != end; ++i) {
			if (!is_directory(i->path()) && isExec(i->path().filename().u8string()))
			{
				vector<string> vec;
				vec.push_back(i->path().u8string());
				WL.insert(pair<string, vector<string>>(i->path().filename().u8string(), vec));
			}
		}
	}
	catch (const std::exception&)
	{
		return;
	}
	CommitMap(WL, WHITELIST_FILE);
}

BOOL ReloadList() 
{
	try
	{
		WL = LoadMap(WHITELIST_FILE);
		return TRUE;
	}
	catch (const std::exception&)
	{
		return FALSE;
	}
}