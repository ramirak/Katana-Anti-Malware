#include "Whitelisting.h"

using namespace std;
using namespace std::filesystem;

map<string, string> WL;

BOOL isExec(string filename)
{
	return !strcmp(PathFindExtensionA(filename.c_str()), ".exe");
}

void printWL() 
{
	for (const auto& elem : WL)
	{
		cout << elem.first << " " << elem.second << "\n";
	}
}

BOOL InitWhitelist() 
{
	string sysdrive = getenv("SystemDrive");
	sysdrive.append("/");
	try
	{
		for (recursive_directory_iterator i(sysdrive.c_str(), directory_options::skip_permission_denied), end; i != end; ++i) {
			if (!is_directory(i->path()) && isExec(i->path().filename().u8string()))
			{
//				cout << i->path().filename().u8string() << endl;
				WL.insert(pair<string, string>(i->path().u8string(), i->path().filename().u8string()));
			}
		}
	}
	catch (const std::exception&)
	{
		return FALSE;
	}

	return TRUE;
}